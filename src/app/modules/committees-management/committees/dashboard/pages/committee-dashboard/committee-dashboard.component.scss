@import "src/assets/css/utils/variables.scss";
@import "src/assets/css/utils/mixins.scss";

.dashboard {
  &-container {
    display: flex;
    gap: 1.5rem;

    @media (min-width: 992px) {
      flex-wrap: wrap;
    }

    @media (max-width: 992px) {
      flex-direction: column;
    }
  }

  &-main {
    flex: 1;

    @media (min-width: 992px) {
      width: calc(100% - 23.5rem);
      min-width: 35rem;
    }
  }

  &-sidebar {
    width: 100%;
    flex: 1;

    @media (min-width: 992px) {
      max-width: 22rem;
    }
  }
}

.analytics-widgets {
  container: analytics-widgets / inline-size;

  &-items {
    display: grid;
    gap: 1rem;

    @container analytics-widgets (min-width: 550px) {
      & {
        grid-template-columns: repeat(3, 1fr);
      }
    }

    @container analytics-widgets (max-width: 550px) {
      & {
        grid-template-columns: 1fr;
      }
    }
  }

  ::ng-deep app-stats-widget {
    .stats-widget {
      height: 100%;
    }
  }
}

.content-block {
  background-color: $white-color;
  padding: 1.25rem;
  border: 0.0625rem solid $light_white_smoke_color;
  border-radius: 0.625rem;
  box-shadow: 0px 0px 26px rgba(0, 0, 0, 0.04);

  .decisions-header,
  .activities-header {
    padding: 1.25rem 1.25rem 0 1.25rem;
  }

  &-title {
    color: $black_color;
    font-weight: 500;
    font-size: 1.125rem;
    line-height: 1.25rem !important;

    .total-count {
      color: $info_color;
    }
  }

  &-subtitle {
    color: $info_color;
    font-size: 0.875rem;
    font-weight: 500;
    line-height: 1.25rem !important;
  }

  &-length {
    color: $main-color;
    font-size: 0.875rem;
    font-weight: 500;
    line-height: 1.25rem !important;
  }
}

.task-status {
  &-item {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem;
    border: 0.0625rem solid $light_white_smoke_color;
    border-radius: 0.625rem;

    .progress-details {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      .progress-count {
        font-weight: 500;
        font-size: 1.125rem;
        @include rtl_value(margin-bottom, 0.25rem, -0.25rem);
      }

      .progress-title {
        font-weight: 500;
        font-size: 0.875rem;
      }
      .task-count {
        font-weight: 500;
        font-size: 1rem;
        @include rtl_value(margin-bottom, 0.25rem, -0.25rem);
      }
    }
  }
}

.decisions-list {
  overflow-x: auto;

  table {
    width: 100%;

    tr {
      --actions-width: 70px;

      &:not(:first-of-type):not(:last-of-type) {
        border-bottom: 1px solid #efefef;
      }

      th {
        color: $info_color;
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0 1.25rem;
      }

      td {
        font-weight: 500;
        padding: 0.625rem 1.25rem;
      }

      .decision-title {
        min-width: 150px;
      }

      .created-by {
        :host ::ng-deep person-item {
          .personItem {
            > .avatar {
              .letters,
              img {
                height: 1.5rem !important;
                width: 1.5rem !important;
              }

              .letters {
                font-size: 0.625rem;
              }
            }

            .name {
              font-size: 0.875rem;
              margin-bottom: 0;
            }

            .job {
              display: none;
            }
          }
        }
      }

      .decision-voting {
        .users-group {
          display: flex;
          align-items: center;
          gap: 0.625rem;
        }

        .users-count {
          white-space: nowrap;
        }
      }

      .decision-actions {
        button {
          background: none;
          color: $main-color;
          padding: 0;
          border: 0;
          font-weight: 500;

          &:hover {
            text-decoration: underline;
          }
        }
      }
    }
  }
}

.activities-list {
  overflow-x: auto;

  table {
    width: 100%;

    tr {
      --actions-width: 70px;

      &:not(:last-of-type) {
        border-bottom: 1px solid #efefef;
      }

      td {
        font-weight: 500;
        padding: 10px 20px;
      }

      .created-by {
        ::ng-deep person-item {
          .personItem {
            > .avatar {
              .letters,
              img {
                height: 2rem;
                width: 2rem;
              }

              .letters {
                font-size: 10px;
              }
            }

            .name {
              color: $black-color;
              font-size: 12px;
              font-weight: 500;
            }

            .job {
              display: none;
            }
          }
        }
      }

      .activity-desc {
        min-width: 200px;
        color: $info-color;
        font-weight: 400;
      }

      .activity-time {
        white-space: nowrap;
      }

      .activity-actions {
        a {
          display: flex;
          align-items: center;
          justify-content: center;
          height: 1.5rem;
          width: 1rem;
          color: $info-color;
          font-size: 1rem;
          border: 1px solid transparent;
          border-radius: 10px;

          &:hover {
            color: $main-color;
            border-color: #efefef;
          }
        }
      }
    }
  }
}

.meetings {
  &-list {
    display: flex;
    flex-direction: column;
    gap: 0.625rem;
    margin-bottom: 2rem;
  }
}

.tasks {
  &-list {
    display: flex;
    flex-direction: column;
    gap: 0.625rem;
    margin-bottom: 2rem;
  }

  &-item {
    padding: 0.75rem;
    border: 0.0625rem solid #efefef;
    border-radius: 0.625rem;
    filter: drop-shadow(0px 0.25rem 0.875rem rgba(0, 0, 0, 0.01));

    &-type {
      ::ng-deep {
        .badge-status::before {
          content: none;
        }
      }
    }

    &-meta {
      width: fit-content !important;

      &-item {
        display: flex;
        align-items: center;
        gap: 0.375rem;
      }

      &-count {
        font-size: 0.875rem;
        font-weight: 500;
        line-height: 1.25rem;
      }

      i {
        color: $info_color;
        font-size: 1rem;
      }
    }

    &-title {
      font-weight: 600;
      font-size: 0.875rem;
      line-height: 1.25rem;
    }

    &-date {
      color: $info_color;
      font-weight: 400;
      font-size: 0.75rem;
      line-height: 1.25rem;
    }
  }
}

.poll {
  &-list {
    display: flex;
    flex-direction: column;
    gap: 0.625rem;
    margin-bottom: 0;
  }

  &-item {
    padding: 0.75rem;
    border: 0.0625rem solid #efefef;
    border-radius: 0.625rem;
    filter: drop-shadow(0px 0.25rem 0.875rem rgba(0, 0, 0, 0.01));

    &-title {
      font-weight: 600;
      font-size: 0.875rem;
      line-height: 1.25rem;
    }

    &-date {
      color: $info_color;
      font-weight: 400;
      font-size: 0.75rem;
      line-height: 1.25rem;
    }

    &-time {
      color: $info_color;
      font-size: 0.75rem;
      font-weight: 400;
      line-height: 1.25rem;
      white-space: nowrap;
    }

    &-details {
      color: $main-color;
      margin-top: 1rem !important;
      position: relative !important;
      top: 0.5rem !important;

      &:hover {
        text-decoration: underline;
      }
    }
  }
}

.row-gap-3 {
  row-gap: 1rem;
}

.row-gap-4 {
  row-gap: 1.5rem;
}

.no-data {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  padding-block: 1rem 2rem;

  ::ng-deep app-no-data {
    .no-data {
      position: static;
      top: initial;
      left: initial;
      transform: none;
    }

    img {
      display: block;
      margin: auto;
      width: 101px;
      height: 83px;
    }

    p {
      width: auto;
      font-size: 0.875rem;
      margin: 1.5rem 0 0;
    }
  }
}

.dashboard-sidebar-attendance-percantage {
  background-color: #ffffff;
  padding: 1.25rem;
  border: 0.0625rem solid #f1f1f1;
  border-radius: 0.625rem;
  box-shadow: 0px 0px 26px rgba(0, 0, 0, 0.04);
}

::ng-deep {
  // .noVoting {
  //   position: relative !important;
  //   top: 1rem !important;
  //   margin-bottom: 1rem !important;
  // }

  .cVoting {
    .noVoting {
      .status {
        visibility: hidden;
      }
    }

    .vote-progress {
      .bg-danger {
        //left : 100% !important
      }
    }
  }
}
